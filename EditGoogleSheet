#undef int
#undef abs
#undef double
#undef float
#undef round
#include <SPI.h>
#include <WiFiNINA.h>

#include "arduino_secrets.h"


///////////////////////////////
///      EDIT THIS STUFF     //
///////////////////////////////

char devid[] = "v45469F2B40A60FB";  // THIS IS THE DEVICE ID FROM PUSHINGBOX

int del = 300; // Amount of seconds delay between posting to google docs.

char ssid[] = SECRET_SSID;        // your network SSID (name)
char pass[] = SECRET_PASS;    // your network password (use for WPA, or use as key for WEP)
int keyIndex = 0;                 // your network key Index number (needed only for WEP)
int ranNum = 0;
String Info;
int maxNoise = 0;
int maxTime;

///////////////////////////////
//       DONE EDITING        //
///////////////////////////////

int status = WL_IDLE_STATUS;

char postmsg[100];
int k = 0;
int temp_av = 0;
char server[] = "api.pushingbox.com";
WiFiClient client;

//merge setup and loop methods with those in soundTest1?

void setup()
{
  Serial.begin(9600);

  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }

  String fv = WiFi.firmwareVersion();
  if (fv != "1.0.0") {
    Serial.println("Please upgrade the firmware");
  }

  // attempt to connect to Wifi network:
  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to Network named: ");
    Serial.println(ssid);                   // print the network name (SSID);

    // Connect to WPA/WPA2 network. Change this line if using open or WEP network:
    status = WiFi.begin(ssid, pass);
    // wait 10 seconds for connection:
    delay(10000);
  }
  //  printWifiStatus();                        // you're connected now, so print out the status
}

//declare disruption information variables for use in secondary file
extern boolean sendDisruption;
extern String disruptionPlace;
extern double disruptionLength;

void loop() {

  //if sendDisruption is triggered
  if (sendDisruption) {
    sendDisruption == false;

    // Post to Google Form.............................................
    if (client.connect(server, 80) && ranNum == 0)
    {
      k = 0;
      Serial.println("connected");
      client.print("GET /pushingbox?devid=v45469F2B40A60FB&status=");

      //send report message with time and place information
      client.print("Library section " + disruptionPlace + " was disrupted for " + disruptionLength + " seconds.");

      //reset disruption length after sending report
      disruptionLength = 0.0;
      
      client.print("HTTP/1.1\r\nHost: api.pushingbox.com\r\n\r\n");
      client.println("User-Agent: Arduino");
      client.println();
      Serial.println(postmsg);
      Serial.println("Host: api.pushingbox.com");
      Serial.println("Connection: close");
      Serial.println();

      delay(1000);
      client.stop();
      ranNum++;
    }
    delay(10000);

  }

  if (!client.connected())
  {
    Serial.println();
    Serial.println("disconnecting.");
    client.stop();
    k == 1;
    return;
  }

}
